// Code generated by mockery v2.49.0. DO NOT EDIT.

package mocks

import (
	bytes "github.com/berachain/beacon-kit/primitives/bytes"
	mock "github.com/stretchr/testify/mock"
)

// ProposerDomain is an autogenerated mock type for the ProposerDomain type
type ProposerDomain struct {
	mock.Mock
}

type ProposerDomain_Expecter struct {
	mock *mock.Mock
}

func (_m *ProposerDomain) EXPECT() *ProposerDomain_Expecter {
	return &ProposerDomain_Expecter{mock: &_m.Mock}
}

// DomainTypeProposer provides a mock function with given fields:
func (_m *ProposerDomain) DomainTypeProposer() bytes.B4 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DomainTypeProposer")
	}

	var r0 bytes.B4
	if rf, ok := ret.Get(0).(func() bytes.B4); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(bytes.B4)
		}
	}

	return r0
}

// ProposerDomain_DomainTypeProposer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DomainTypeProposer'
type ProposerDomain_DomainTypeProposer_Call struct {
	*mock.Call
}

// DomainTypeProposer is a helper method to define mock.On call
func (_e *ProposerDomain_Expecter) DomainTypeProposer() *ProposerDomain_DomainTypeProposer_Call {
	return &ProposerDomain_DomainTypeProposer_Call{Call: _e.mock.On("DomainTypeProposer")}
}

func (_c *ProposerDomain_DomainTypeProposer_Call) Run(run func()) *ProposerDomain_DomainTypeProposer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProposerDomain_DomainTypeProposer_Call) Return(_a0 bytes.B4) *ProposerDomain_DomainTypeProposer_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProposerDomain_DomainTypeProposer_Call) RunAndReturn(run func() bytes.B4) *ProposerDomain_DomainTypeProposer_Call {
	_c.Call.Return(run)
	return _c
}

// NewProposerDomain creates a new instance of ProposerDomain. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProposerDomain(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProposerDomain {
	mock := &ProposerDomain{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
